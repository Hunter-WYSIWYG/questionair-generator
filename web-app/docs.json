[{"name":"Answer","comment":" Enthält den Typ Answer für Antworten, der für Questions und Conditions verwendet wird.\n\n\n# Definition\n\n@docs Answer\n\n\n# Öffentliche Funktionen\n\n@docs getBipolarAnswers, getUnipolarAnswers, initAnswer, getYesNoAnswers, update\n\n","unions":[],"aliases":[{"name":"Answer","comment":" Repäsentiert Antworten, die in Fragen und Bedingungen vorkommen. Antworten bestehen aus einer eindeutigen ID, einem Text und einem Typ.\nEin Typ kann entweder 'free' oder 'regular' sein\n","args":[],"type":"{ id : Basics.Int, text : String.String, typ : String.String }"}],"values":[{"name":"getBipolarAnswers","comment":" Gibt eine Liste von Antworten für bipolare Antworten im Bereich vom negativen angegebenen Wert bis zum positiven Wert zurück.\n","type":"String.String -> List.List Answer.Answer"},{"name":"getUnipolarAnswers","comment":" Gibt eine Liste von Antworten für unipolare Antworten im Bereich von 0 bis zum angegebenen Wert zurück.\n","type":"String.String -> List.List Answer.Answer"},{"name":"getYesNoAnswers","comment":" Gibt die vordefinierten Antworten für Ja/Nein-Fragen zurück\n","type":"String.String -> List.List Answer.Answer"},{"name":"initAnswer","comment":" Eine Antwort ohne Typ und Text, die als Input bspw. bei Erzeugung einer neuen Frage verwendet wird.\nDie Antwort wird in die Liste der Antworten übernommen, wenn Text und Typ angepasst wurden.\n","type":"Answer.Answer"},{"name":"update","comment":" Überprüft ob zwei Antworten die gleichen IDs haben und ersetzt answer durch answerToUpdate.\n","type":"Answer.Answer -> Answer.Answer -> Answer.Answer"}],"binops":[]},{"name":"Condition","comment":" Enthält den Typ Condition für Bedingungen.\n\n\n# Definition\n\n@docs Condition\n\n\n# Öffentliche Funktionen\n\n@docs addAnswerOfQuestionToCondition, deleteAnswerInCondition, deleteCondAnswer, deleteConditionWithChild, deleteConditionWithElement, deleteConditionWithParent, getConditionWithParentID, getNewConditionID, initCondition, removeConditionFromCondList, setParentChildInCondition, setValid, updateCondition, updateConditionAnswer, updateConditionAnswers, updateConditionID, updateConditionWithAnswer, updateIDsInCondition\n\n","unions":[],"aliases":[{"name":"Condition","comment":" Bedingungen haben eine parent\\_id und child\\_id, die sich auf eine Frage (child) und die Frage (parent) mit der enthaltenen Bedingung beziehen.\nEs wird zu der Frage mit der child\\_id gesprungen, wenn eine Antwort aus der Liste von Antworten in der Frage mit der parent\\_id beantwortet ist.\n","args":[],"type":"{ parent_id : Basics.Int, child_id : Basics.Int, answers : List.List Answer.Answer, isValid : Basics.Bool }"}],"values":[{"name":"addAnswerOfQuestionToCondition","comment":" Sucht die Antwort mit der Angegebenen ID aus der Frage newElement und fügt diese zur Liste von Antworten der Condition hinzu.\n","type":"Basics.Int -> QElement.Q_element -> Condition.Condition -> Condition.Condition"},{"name":"deleteAnswerInCondition","comment":" TODO\n","type":"Basics.Int -> Condition.Condition -> Condition.Condition"},{"name":"deleteCondAnswer","comment":" TODO\n","type":"List.List Answer.Answer -> Basics.Int -> List.List Answer.Answer"},{"name":"deleteConditionWithChild","comment":" Löscht eine Condition aus einer Liste von Conditions, die das Element mit der angegebenen ID als CHILD\\_ID enthält.\n","type":"List.List Condition.Condition -> Basics.Int -> List.List Condition.Condition"},{"name":"deleteConditionWithElement","comment":" Löscht eine Condition aus einer Liste von Conditions, die das Element mit der angegebenen ID enthält.\n","type":"List.List Condition.Condition -> Basics.Int -> List.List Condition.Condition"},{"name":"deleteConditionWithParent","comment":" Löscht eine Condition aus einer Liste von Conditions, die das Element mit der angegebenen ID als PARENT\\_ID enthält.\n","type":"List.List Condition.Condition -> Basics.Int -> List.List Condition.Condition"},{"name":"getConditionWithParentID","comment":" Gibt aus einer Liste von Conditions die Condition zurück, die als parent\\_id die angegebene ID hat.\n","type":"List.List Condition.Condition -> Basics.Int -> Condition.Condition"},{"name":"getNewConditionID","comment":" TODO\n","type":"Basics.Int -> Basics.Int -> Basics.Int -> Basics.Int"},{"name":"initCondition","comment":" Leere Bedingung für die Input-Condition. Bezieht sich auf keine konkreten Fragen und wird mit dem Input überschrieben.\n","type":"Condition.Condition"},{"name":"removeConditionFromCondList","comment":" Entfernt eine Condition aus der Liste von Conditions.\n","type":"Condition.Condition -> List.List Condition.Condition -> List.List Condition.Condition"},{"name":"setParentChildInCondition","comment":" Aktualisiert die Fragen-IDs in einer Condition.\n","type":"Basics.Int -> Basics.Int -> Condition.Condition -> Condition.Condition"},{"name":"setValid","comment":" Setzt isValid einer Condition auf den angegebenen Wert.\n","type":"Condition.Condition -> Basics.Bool -> Condition.Condition"},{"name":"updateCondition","comment":" Ersetzt eine Condition in einer Liste von Conditions durch conditionToUpdate.\n","type":"Condition.Condition -> Condition.Condition -> Condition.Condition"},{"name":"updateConditionAnswer","comment":" TODO\n","type":"Basics.Int -> Basics.Int -> Answer.Answer -> Answer.Answer"},{"name":"updateConditionAnswers","comment":" TODO\n","type":"List.List Condition.Condition -> Basics.Int -> Basics.Int -> List.List Condition.Condition"},{"name":"updateConditionID","comment":" TODO\n","type":"Basics.Int -> Basics.Int -> Condition.Condition -> Condition.Condition"},{"name":"updateConditionWithAnswer","comment":" TODO\n","type":"Basics.Int -> Basics.Int -> Condition.Condition -> Condition.Condition"},{"name":"updateIDsInCondition","comment":" Sucht die Condition mit der alten Id aus einer Liste und aktualisiert deren Id bei Aktualisierung der Fragenreihenfolge.\n","type":"List.List Condition.Condition -> Basics.Int -> Basics.Int -> List.List Condition.Condition"}],"binops":[]},{"name":"Decoder","comment":" Enthält die Decoder für Questionnaire, QElement, Answer (usw.).\n\n\n# Öffentliche Funktionen\n\n@docs answerDecoder, decodeElements, decodeTitle, elementDecoder, noteDecoder, questionDecoder\n\n","unions":[],"aliases":[],"values":[{"name":"answerDecoder","comment":" Decodiert eine Antwort.\n","type":"Json.Decode.Decoder Answer.Answer"},{"name":"decodeElements","comment":" Decodiert eine Liste von Fragebogenelementen (Fragen, Anmerkunden).\n","type":"String.String -> List.List QElement.Q_element"},{"name":"decodeTitle","comment":" Decodiert den Titel des Questionnaires, kann aber auch auf andere Typen angewendet werden.\n","type":"String.String -> String.String"},{"name":"elementDecoder","comment":" Decodiert ein einzelnes Fragebogenelement (Frage, Anmerkung).\n","type":"Json.Decode.Decoder QElement.Q_element"},{"name":"noteDecoder","comment":" Decodiert eine Anmerkung.\n","type":"Json.Decode.Decoder QElement.Q_element"},{"name":"questionDecoder","comment":" Decodiert eine Frage.\n","type":"Json.Decode.Decoder QElement.Q_element"}],"binops":[]},{"name":"Edit","comment":" Enthält die View für das Bearbeiten von Fragebögen.\n\n\n# Öffentliche Funktionen\n\n@docs answersTable, getAnswerTable, getQuestionOptions, getQuestionTable, questionsTable, radio, showCreateQuestionOrNoteButtons, showEditQuestionnaire, showHeroQuestionnaireTitle, showInputBipolarUnipolar, showQuestionList, showTimes, tableHead_answers, tableHead_questions, viewConditions, viewEditTimeModal, viewNewAnswerModal, viewNewNoteModal, viewNewQuestionModal, viewQuestionValidation, viewTitleModal, viewValidation, viewViewingTimeModal\n\n","unions":[],"aliases":[],"values":[{"name":"answersTable","comment":" Zeigt die Tabelle mit den Antworten der \"Inputfrage\" (newElement) an.\n","type":"Questionnaire.Questionnaire -> List.List (Html.Html Model.Msg)"},{"name":"getAnswerTable","comment":" Darstellung einer Frage in einer Tabelle.\n","type":"Basics.Int -> Answer.Answer -> Html.Html Model.Msg"},{"name":"getQuestionOptions","comment":" Zeigt eine Liste von Fragen an, die zur Bedingung als \"Elternfrage\" oder \"Kindfrage\" hinzugefügt werden können.\nSiehe viewConditionModal\n","type":"List.List QElement.Q_element -> Condition.Condition -> List.List (Html.Html Model.Msg)"},{"name":"getQuestionTable","comment":" Die Darstellung eines Elements des Fragebogens in der Tabelle.\n","type":"Basics.Int -> QElement.Q_element -> Html.Html Model.Msg"},{"name":"questionsTable","comment":" Zeigt eine Tabelle mit vorhandenen Fragen an.\n","type":"Questionnaire.Questionnaire -> List.List (Html.Html Model.Msg)"},{"name":"radio","comment":" Radiobutton.\n","type":"String.String -> msg -> Html.Html msg"},{"name":"showCreateQuestionOrNoteButtons","comment":" Zeigt die Buttons für das Erstellen von neuen Elementen (Fragen, Anmerkungen) für den Fragebogen an.\n","type":"Questionnaire.Questionnaire -> Html.Html Model.Msg"},{"name":"showEditQuestionnaire","comment":" Zeigt die Oberfläche bzw. die View für das Bearbeiten von Fragebögen an.\n","type":"Model.Model -> Html.Html Model.Msg"},{"name":"showHeroQuestionnaireTitle","comment":" Zeigt den Titel des Fragebogens in einem Hero (s. Bulma.io) an.\n","type":"Questionnaire.Questionnaire -> Html.Html Model.Msg"},{"name":"showInputBipolarUnipolar","comment":" Eingabeoberfläche, wie viele Antworten für uni-/bipolare Fragen erstellt werden sollen.\n","type":"Questionnaire.Questionnaire -> Html.Html Model.Msg"},{"name":"showQuestionList","comment":" Zeigt eine Tabelle mit den Fragen und Anmerkungen des Fragebogens an.\n","type":"Questionnaire.Questionnaire -> Html.Html Model.Msg"},{"name":"showTimes","comment":" Zeigt die Zeiten (Bearbeitungszeiten, Erscheinungszeiten, usw.) an.\n","type":"Questionnaire.Questionnaire -> Html.Html Model.Msg"},{"name":"tableHead_answers","comment":" Der Tabellenkopf der Tabelle von Antworten.\n","type":"Html.Html Model.Msg"},{"name":"tableHead_questions","comment":" Der Tabellenkopf der Tabelle mit den vorhandenen Fragen.\n","type":"Html.Html Model.Msg"},{"name":"viewConditions","comment":" TODO: !!!NUR FÜR DEBUG ZWECKE!!!\nZeigt eine Liste von Bedingungen an.\n","type":"Questionnaire.Questionnaire -> Html.Html Model.Msg"},{"name":"viewEditTimeModal","comment":" Zeigt das Modal für das Bearbeiten der Bearbeitungszeit des Fragebogens an.\n","type":"Model.Model -> Html.Html Model.Msg"},{"name":"viewNewAnswerModal","comment":" Zeigt ein Modal zum Erstellen neuer Antworten an.\n","type":"Model.Model -> Html.Html Model.Msg"},{"name":"viewNewNoteModal","comment":" Zeigt das Modal für das Erstellen einer Anmerkung an.\n","type":"Model.Model -> Html.Html Model.Msg"},{"name":"viewNewQuestionModal","comment":" Zeigt das Modal für das Erstellen einer neuen Frage an.\n","type":"Model.Model -> Html.Html Model.Msg"},{"name":"viewQuestionValidation","comment":" TODO: KOMMENTAR RICHTIG SO? WIESO NICHT MIT viewValidation LÖSEN?\nAusgabe, ob die Eingabefrage gültig ist.\n","type":"Model.ValidationResult -> Html.Html msg"},{"name":"viewTitleModal","comment":" Zeigt das Modal für das Bearbeiten des Fragebogentitels an.\n","type":"Model.Model -> Html.Html Model.Msg"},{"name":"viewValidation","comment":" Ausgabe, ob die Eingaben gültig sind.\n","type":"Model.Model -> Html.Html msg"},{"name":"viewViewingTimeModal","comment":" Zeigt das Modal zum Bearbeiten der Erscheinungszeiten an.\n","type":"Model.Model -> Html.Html Model.Msg"}],"binops":[]},{"name":"Encoder","comment":" Enthält die Decoder für Questionnaire, QElement, Answer (usw.).\n\n\n# Öffentliche Funktionen\n\n@docs encodeQuestionnaire, save\n\n","unions":[],"aliases":[],"values":[{"name":"encodeQuestionnaire","comment":" Encodiert einen Fragebogen als JSON.\n","type":"Questionnaire.Questionnaire -> String.String"},{"name":"save","comment":" Ermöglicht das Speichern von erstellten Fragebögen im Dateisystem des Nutzers (Downloadfunktion).\n","type":"Questionnaire.Questionnaire -> String.String -> Platform.Cmd.Cmd msg"}],"binops":[]},{"name":"Main","comment":" Main enthält die Hauptfunktionen der WebApp.\n\n\n# Funktionen\n\n@docs subscriptions, main, update, view\n\n","unions":[],"aliases":[],"values":[{"name":"main","comment":" Main-Funktion.\n","type":"Platform.Program () Model.Model Model.Msg"},{"name":"subscriptions","comment":" Subscriptions-Funktion\n","type":"Model.Model -> Platform.Sub.Sub Model.Msg"},{"name":"update","comment":" Update-Funktion mit Logik der WebApp.\n","type":"Model.Msg -> Model.Model -> ( Model.Model, Platform.Cmd.Cmd Model.Msg )"},{"name":"view","comment":" Anzeige der Views für das Editieren und Uploaden von Fragebögen.\n","type":"Model.Model -> Html.Html Model.Msg"}],"binops":[]},{"name":"Model","comment":" Enthält die Typen für das Model, die Modale, die Messages und das ValidationResult. Enthällt außerdem den Anfangszustand des Models.\n\n\n# Definition\n\n@docs Model, ModalType, Msg, ValidationResult\n\n\n# Öffentliche Funktionen\n\n@docs initModel, isValidEditTime, isValidQuestionTime, isValidViewingTime, validate, validateQuestion\n\n","unions":[{"name":"ModalType","comment":" Die Modaltypen, die geöffnet werden können.\n","args":[],"cases":[["ViewingTimeModal",[]],["EditTimeModal",[]],["NewNoteModal",[]],["QuestionModal",[]],["TitleModal",[]],["AnswerModal",[]],["ConditionModal1",[]],["ConditionModal2",[]]]},{"name":"Msg","comment":" Die Messages der Webanwendung.\n","args":[],"cases":[["ChangeInputQuestionnaireTitle",["String.String"]],["ChangeEditTime",["String.String"]],["ChangeViewingTimeBegin",["String.String"]],["ChangeViewingTimeEnd",["String.String"]],["ChangeQuestionOrNoteText",["String.String"]],["ChangeAnswerText",["String.String"]],["ChangeQuestionNote",["String.String"]],["ChangeQuestionType",["String.String"]],["ChangeAnswerType",["String.String"]],["ChangeQuestionNewAnswer",["Answer.Answer"]],["ChangeQuestionTime",["String.String"]],["ViewOrClose",["Model.ModalType"]],["AddCondition",[]],["AddConditionAnswer",[]],["AddAnswerToNewCondition",["String.String"]],["ChangeInputParentId",["String.String"]],["ChangeInputChildId",["String.String"]],["SetQuestionnaireTitle",[]],["SetNote",[]],["SetQuestion",[]],["SetAnswer",[]],["SetConditions",[]],["SetPolarAnswers",["String.String"]],["EditQuestion",["QElement.Q_element"]],["EditNote",["QElement.Q_element"]],["EditAnswer",["Answer.Answer"]],["EditQuestionnaire",[]],["PutUpEl",["QElement.Q_element"]],["PutDownEl",["QElement.Q_element"]],["PutUpAns",["Answer.Answer"]],["PutDownAns",["Answer.Answer"]],["DeleteItem",["QElement.Q_element"]],["DeleteAnswer",["Answer.Answer"]],["Submit",[]],["LeaveOrEnterUpload",[]],["EnterUpload",[]],["JsonRequested",[]],["JsonSelected",["File.File"]],["JsonLoaded",["String.String"]],["DownloadQuestionnaire",[]]]},{"name":"ValidationResult","comment":" Das Ergebnis der Validierung des Models.\n","args":[],"cases":[["NotDone",[]],["Error",["String.String"]],["ValidationOK",[]]]}],"aliases":[{"name":"Model","comment":" Das Model für die Webanwendung.\n","args":[],"type":"{ questionnaire : Questionnaire.Questionnaire, showTitleModal : Basics.Bool, showEditTimeModal : Basics.Bool, showViewingTimeModal : Basics.Bool, showNewNoteModal : Basics.Bool, showNewQuestionModal : Basics.Bool, showNewAnswerModal : Basics.Bool, showNewConditionModal1 : Basics.Bool, showNewConditionModal2 : Basics.Bool, editQElement : Basics.Bool, editAnswer : Basics.Bool, inputTitle : String.String, validationResult : Model.ValidationResult, inputEditTime : String.String, inputViewingTimeBegin : String.String, inputViewingTimeEnd : String.String, inputQuestionTime : String.String, questionValidationResult : Model.ValidationResult, inputParentId : Basics.Int, inputChildId : Basics.Int, newAnswerID_Condition : String.String, newCondition : Condition.Condition, upload : Basics.Bool, editQuestionnaire : Basics.Bool, tmp : String.String }"}],"values":[{"name":"initModel","comment":" Der Anfangszustand des Models.\n","type":"() -> ( Model.Model, Platform.Cmd.Cmd Model.Msg )"},{"name":"isValidEditTime","comment":" Methode zur Validierung der Länge der Bearbeitungszeit.\n","type":"String.String -> Basics.Bool"},{"name":"isValidQuestionTime","comment":" Methode zur Validierung der Länge der Fragenzeit.\n","type":"String.String -> Basics.Bool"},{"name":"isValidViewingTime","comment":" Methode zur Validierung der Länge der Erscheindungszeit.\n","type":"String.String -> Basics.Bool"},{"name":"validate","comment":" Methode zur Validierung des Models, speziell der Zeitformate.\n","type":"Model.Model -> Model.ValidationResult"},{"name":"validateQuestion","comment":" Methode zur Validierung des Fragenzeitformats.\n","type":"String.String -> Model.ValidationResult"}],"binops":[]},{"name":"QElement","comment":" Enthält den Typ für die Elemente von Fragebögen (Fragen, Anmerkungen) und ein Anfangszustand für das \"Input-Element\" (newElement).\n\n\n# Definition\n\n@docs Q_element, NoteRecord, QuestionRecord\n\n\n# Öffentliche Funktionen\n\n@docs deleteAnswerFromItem, deleteItemFrom, getAnswerWithID, getAntworten, getElementId, getElementText, getID, getQuestionHinweis, getQuestionTyp, getText, initQuestion, putAnswerDown, putAnswerUp, putElementDown, putElementUp, setNewID, updateAnsID, updateElement, updateElementList, updateID\n\n","unions":[{"name":"Q_element","comment":" Element eines Fragebogens (Frage, Anmerkung)\n","args":[],"cases":[["Note",["QElement.NoteRecord"]],["Question",["QElement.QuestionRecord"]]]}],"aliases":[{"name":"NoteRecord","comment":" Record einer Anmerkung mit ID und Text der Anmerkung.\n","args":[],"type":"{ id : Basics.Int, text : String.String }"},{"name":"QuestionRecord","comment":" Record einer Frage mit ID, Text, Liste von Antworten, Hinweis, Fragetyp und Fragenzeit.\n","args":[],"type":"{ id : Basics.Int, text : String.String, answers : List.List Answer.Answer, hint : String.String, typ : String.String, questionTime : String.String }"}],"values":[{"name":"deleteAnswerFromItem","comment":" Löscht die angegebene Antwort answer von einer Frage element.\nDabei wird die Antwort in der Liste gesucht, dass die gleiche ID wie answer hat.\n","type":"Answer.Answer -> QElement.Q_element -> QElement.Q_element"},{"name":"deleteItemFrom","comment":" Löscht das Fragebogenelement element in der Liste list.\nDabei wird das Element in der Liste gesucht, dass die gleiche ID wie element hat.\n","type":"QElement.Q_element -> List.List QElement.Q_element -> List.List QElement.Q_element"},{"name":"getAnswerWithID","comment":" Findet die Antwort mit der angegebenen ID innerhalb einer Frage.\n","type":"Basics.Int -> QElement.Q_element -> Maybe.Maybe Answer.Answer"},{"name":"getAntworten","comment":" Gibt die Antworten einer Frage aus.\n","type":"QElement.Q_element -> List.List Answer.Answer"},{"name":"getElementId","comment":" TODO: ENFERNEN! DUPLIZIERT getID\n","type":"QElement.Q_element -> Basics.Int"},{"name":"getElementText","comment":" TODO: ENFERNEN! DUPLIZIERT getText\n","type":"QElement.Q_element -> String.String"},{"name":"getID","comment":" TODO: WIRKLICH NÖTOG?\nGibt die ID eines Fragebogenelements aus.\n","type":"QElement.Q_element -> Basics.Int"},{"name":"getQuestionHinweis","comment":" Gibt den Hinweis einer Frage aus.\n","type":"QElement.Q_element -> String.String"},{"name":"getQuestionTyp","comment":" Gibt den Typ einer Frage aus\n","type":"QElement.Q_element -> String.String"},{"name":"getText","comment":" TODO: WIRKLICH NÖTOG?\nGibt den Text eines Fragebogenelements aus.\n","type":"QElement.Q_element -> String.String"},{"name":"initQuestion","comment":" Anfangszustand einer Frage für die \"Inputfrage\" (newElement).\n","type":"QElement.Q_element"},{"name":"putAnswerDown","comment":" Hilfsfunktion für das Verringern der ID einer Antwort. Die Frage wird dann in der Tabelle von Antworten einer Frage um eine Position nach unten verschoben.\n","type":"QElement.Q_element -> Answer.Answer -> QElement.Q_element"},{"name":"putAnswerUp","comment":" Hilfsfunktion für das Erhöhen der ID einer Antwort. Die Frage wird dann in der Tabelle von Antworten einer Frage um eine Position nach oben verschoben.\n","type":"QElement.Q_element -> Answer.Answer -> QElement.Q_element"},{"name":"putElementDown","comment":" Hilfsfunktion für das Verringern der ID einer Frage. Die Frage wird dann in der Tabelle von Fragen um eine Position nach unten verschoben.\n","type":"List.List QElement.Q_element -> QElement.Q_element -> List.List QElement.Q_element"},{"name":"putElementUp","comment":" Hilfsfunktion für das Erhöhen der ID einer Frage. Die Frage wird dann in der Tabelle von Fragen um eine Position nach oben verschoben.\n","type":"List.List QElement.Q_element -> QElement.Q_element -> List.List QElement.Q_element"},{"name":"setNewID","comment":" Setzt eine neue ID eines Fragebogenelements.\n","type":"QElement.Q_element -> Basics.Int -> QElement.Q_element"},{"name":"updateAnsID","comment":" Vertauscht die IDs zweier Antowrten mit den IDs \"old\" und \"new\".\nHat das Antwort die ID \"old\", wird die ID auf \"new\" gesetzt. Ist die ID gleich \"new\", wird die ID auf \"old\" gesetzt.\n","type":"Basics.Int -> Basics.Int -> Answer.Answer -> Answer.Answer"},{"name":"updateElement","comment":" Ersetzt das Element element durch elementToUpdate, wenn die IDs beieder Fragebogenelemente übereinstimmen.\n","type":"QElement.Q_element -> QElement.Q_element -> QElement.Q_element"},{"name":"updateElementList","comment":" Aktualisiert das angegebene Element in einer Liste von Elementen.\nDabei wird eine Frage mit der ID von elementToUpdate in der Liste list gesucht und durch elementToUpdate ersetzt.\n","type":"QElement.Q_element -> List.List QElement.Q_element -> List.List QElement.Q_element"},{"name":"updateID","comment":" Vertauscht die IDs zweier Elemente mit den IDs \"old\" und \"new\".\nHat das Fragebogenelement die ID \"old\", wird die ID auf \"new\" gesetzt. Ist die ID gleich \"new\", wird die ID auf \"old\" gesetzt.\n","type":"Basics.Int -> Basics.Int -> QElement.Q_element -> QElement.Q_element"}],"binops":[]},{"name":"Questionnaire","comment":" Enthält den Typ für den Fragebogen und den Anfangszustand des Fragebogens im Model.\n\n\n# Definition\n\n@docs Questionnaire\n\n\n# Öffentliche Funktionen\n\n@docs getEditTime, getElementWithText, getViewingTime, initQuestionnaire\n\n","unions":[],"aliases":[{"name":"Questionnaire","comment":" Der Typ, der den Fragebogen mit:\nTitel, Liste von Elementen, \"input-Bedingung\" + zugehörige \"input-Antwort\" (bei deren Beantwortung gesprungen wird), Erscheinungs- und Bearbeitungszeiten, \"Input-Frage/Anmerkung\" und zugehörige \"Input-Antwort\" dieser Frage.\n","args":[],"type":"{ title : String.String, elements : List.List QElement.Q_element, conditions : List.List Condition.Condition, newCondition : Condition.Condition, newAnswerID_Condition : String.String, viewingTimeBegin : String.String, viewingTimeEnd : String.String, editTime : String.String, newElement : QElement.Q_element, newAnswer : Answer.Answer }"}],"values":[{"name":"getEditTime","comment":" Gibt die Bearbeitungszeit des Fragebogens aus.\n","type":"Questionnaire.Questionnaire -> String.String"},{"name":"getElementWithText","comment":" TODO: ALS RÜCKGABETYP Maybe Q\\_element VERWENDEN\nGibt das Element mit dem angegeben Text aus, falls es sich in der Liste von Elementen des Fragebogens questionnaire befindet.\nAndernfalls wird der \"Anfangszustand\" einer Frage ausgegeben.\n","type":"String.String -> Questionnaire.Questionnaire -> QElement.Q_element"},{"name":"getViewingTime","comment":" Gibt die Erscheinungszeit des Fragebogens aus.\n","type":"Questionnaire.Questionnaire -> String.String"},{"name":"initQuestionnaire","comment":" Anfangszustand des Fragebogens.\n","type":"Questionnaire.Questionnaire"}],"binops":[]},{"name":"Upload","comment":" Enthält die View für das Hochladen von Fragebögen.\n\n\n# Öffentliche Funktionen\n\n@docs showUpload\n\n","unions":[],"aliases":[],"values":[{"name":"showUpload","comment":" Zeigt die Oberfläche bzw. die View für das Bearbeiten von Fragebögen an.\n","type":"Model.Model -> Html.Html Model.Msg"}],"binops":[]}]